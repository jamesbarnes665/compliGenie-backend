# compligenie-backend/app/services/pdf_generator.py

from typing import Dict, Any
import base64
from datetime import datetime

class PDFGenerator:
    """Simple PDF generator for policies"""
    
    def __init__(self):
        pass
    
    def generate_pdf(self, policy_content: Dict[str, Any]) -> bytes:
        """
        Generate a PDF from policy content
        For now, returns a simple HTML representation
        In production, you would use reportlab or weasyprint
        """
        # Simple HTML template for now
        html_content = f"""
        <html>
        <head>
            <title>{policy_content.get('policy_type', 'AI Policy')}</title>
            <style>
                body {{ font-family: Arial, sans-serif; margin: 40px; }}
                h1 {{ color: #333; }}
                h2 {{ color: #666; }}
                .section {{ margin-bottom: 30px; }}
                .footer {{ margin-top: 50px; font-size: 12px; color: #999; }}
            </style>
        </head>
        <body>
            <h1>{policy_content.get('policy_type', 'AI Usage Policy')}</h1>
            <p>Generated on: {datetime.utcnow().strftime('%B %d, %Y')}</p>
            
            <div class="section">
                <h2>Overview</h2>
                <p>{policy_content.get('overview', 'This policy governs the use of AI tools within the organization.')}</p>
            </div>
            
            <div class="section">
                <h2>Guidelines</h2>
                <p>{policy_content.get('guidelines', 'All employees must follow these AI usage guidelines.')}</p>
            </div>
            
            <div class="section">
                <h2>Compliance Requirements</h2>
                <p>{policy_content.get('compliance', 'This policy ensures compliance with applicable regulations.')}</p>
            </div>
            
            <div class="footer">
                <p>Generated by CompliGenie - AI Compliance Policy Generator</p>
            </div>
        </body>
        </html>
        """
        
        # Return as bytes (in production, this would be actual PDF bytes)
        return html_content.encode('utf-8')
    
    def generate_pdf_base64(self, policy_content: Dict[str, Any]) -> str:
        """Generate PDF and return as base64 string"""
        pdf_bytes = self.generate_pdf(policy_content)
        return base64.b64encode(pdf_bytes).decode('utf-8')